---
globs: **/*idea.md
alwaysApply: false
---
# IDEA Standards (Concepts & Terminology)

## Required Document Structure
The following sections MUST appear in every idea document. Use structured formatting (headings, bullet points, bold text) while maintaining logical flow and narrative coherence.

### 1. Context
**Problem Statement**
Present the core problem and its rationale in 2-3 flowing sentences.

**System Role**
One sentence describing the module's position in system architecture.

**Data Flow**
- **Inputs:** [concept names from upstream modules]
- **Outputs:** [concept names to downstream modules]
- **Connections:** [upstream] → [this module] → [downstream]

**Scope Boundaries**
- **Owned:** [responsibilities this module manages]
- **Not Owned:** [explicitly out of scope]


### 2. Concepts
**Conceptual Diagram**
```
[Visual representation of module interactions]
```

**Core Concepts**
For each concept, present as flowing paragraph:
- **Name:** [concept identifier]
- **Definition:** [what it is and why it matters]
- **Scope:** [what it includes/excludes]
- **Relationships:** [how it connects to other concepts]

### 3. Contracts & Flow
**Data Contracts**
- **With [Module A]:** [data exchanged, shared terminology]

**Internal Processing Flow**
Present as numbered steps with brief explanations:
1. [Step name] - [what happens] 
2. ...

### 4. Scenarios
- **Typical:** [normal operation example]
- **Boundary:** [edge case handling]
- **Interaction:** [collaboration with other modules]

---

## AI Generation Guidelines (Internal Use Only)

### Formatting & Coherence Balance
- **Structured Layout:** Use headings, bullet points, bold text, and diagrams for clarity
- **Narrative Flow:** Maintain logical connections between sections and within paragraphs
- **Paragraph Length:** Keep paragraphs short (2-4 sentences) for readability
- **Language Style:** Concise, direct statements without unnecessary modifiers
- **Information Density:** Eliminate redundancy while preserving completeness
- **Visual Hierarchy:** Use formatting to guide reading flow without disrupting narrative

### Content Focus
- Concepts and terminology only
- Exclude implementation details, APIs, commands, code samples
- Link to design.md for technical specifications

### Writing Style
- Clear and concise language
- No redundant information
- Audience: Researchers and Developers
- Consistent terminology across modules
- Prioritize readability and logical flow
- Short paragraphs (2-4 sentences)
- Direct statements without modifiers
- Eliminate unnecessary words

### Diagram Requirements
- Concept diagrams of module relationships
- Simple visual structure
- Show data flow and interactions

### Scenario Development
- Observable examples
- Include normal, boundary, interaction cases
- Consistent terminology
- Demonstrate key concepts