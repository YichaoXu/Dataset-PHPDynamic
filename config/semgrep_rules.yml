rules:
  # 检测动态include语句
  # 策略：匹配所有 include $EXPR; 但排除纯字符串字面量
  # $EXPR 是 Semgrep 元变量，匹配任意表达式
  # 会匹配：
  #   - include $file; (变量)
  #   - include $_GET['page']; (数组访问)
  #   - include $base . $path; (字符串拼接)
  #   - include getFile(); (函数调用)
  #   - include "base_$var.php"; (格式字符串，包含变量)
  # 不匹配：
  #   - include "file.php"; (纯字符串字面量，不包含变量)
  #   - include 'file.php'; (纯字符串字面量，不包含变量)
  - id: dynamic-include-detection
    message: "Dynamic include statement detected: include $EXPR"
    languages: [php]
    severity: WARNING
    patterns:
      - pattern-either:
          - pattern: include $EXPR;
          - pattern: include($EXPR);
    metavariable-regex:
      metavariable: $EXPR
      regex: "(?!^\"[^$\"]*\"$|^'[^$']*'$).*"
    metadata:
      category: security
      confidence: MEDIUM
      description: "Detects dynamic include statements with non-string-literal expressions (excluding pure string literals, but including format strings with variables like \"base_$var.php\")"

  # 检测动态include_once语句
  - id: dynamic-include-once-detection
    message: "Dynamic include_once statement detected: include_once $EXPR"
    languages: [php]
    severity: WARNING
    patterns:
      - pattern-either:
          - pattern: include_once $EXPR;
          - pattern: include_once($EXPR);
    metavariable-regex:
      metavariable: $EXPR
      regex: "(?!^\"[^$\"]*\"$|^'[^$']*'$).*"
    metadata:
      category: security
      confidence: MEDIUM
      description: "Detects dynamic include_once statements with non-string-literal expressions (excluding pure string literals, but including format strings with variables)"

  # 检测动态require语句
  - id: dynamic-require-detection
    message: "Dynamic require statement detected: require $EXPR"
    languages: [php]
    severity: WARNING
    patterns:
      - pattern-either:
          - pattern: require $EXPR;
          - pattern: require($EXPR);
    metavariable-regex:
      metavariable: $EXPR
      regex: "(?!^\"[^$\"]*\"$|^'[^$']*'$).*"
    metadata:
      category: security
      confidence: MEDIUM
      description: "Detects dynamic require statements with non-string-literal expressions (excluding pure string literals, but including format strings with variables)"

  # 检测动态require_once语句
  - id: dynamic-require-once-detection
    message: "Dynamic require_once statement detected: require_once $EXPR"
    languages: [php]
    severity: WARNING
    patterns:
      - pattern-either:
          - pattern: require_once $EXPR;
          - pattern: require_once($EXPR);
    metavariable-regex:
      metavariable: $EXPR
      regex: "(?!^\"[^$\"]*\"$|^'[^$']*'$).*"
    metadata:
      category: security
      confidence: MEDIUM
      description: "Detects dynamic require_once statements with non-string-literal expressions (excluding pure string literals, but including format strings with variables)"

  # 检测字符串拼接的include
  - id: string-concatenation-include
    message: "Include with string concatenation detected"
    languages: [php]
    severity: WARNING
    patterns:
      - pattern-either:
          - pattern: include $VAR . $EXPR;
          - pattern: include($VAR . $EXPR);
          - pattern: include_once $VAR . $EXPR;
          - pattern: include_once($VAR . $EXPR);
          - pattern: require $VAR . $EXPR;
          - pattern: require($VAR . $EXPR);
          - pattern: require_once $VAR . $EXPR;
          - pattern: require_once($VAR . $EXPR);
    metadata:
      category: security
      confidence: HIGH
      description: "Detects include/require statements with string concatenation"

  # 检测函数调用的include
  - id: function-call-include
    message: "Include with function call detected"
    languages: [php]
    severity: WARNING
    patterns:
      - pattern-either:
          - pattern: include $FUNC(...);
          - pattern: include($FUNC(...));
          - pattern: include_once $FUNC(...);
          - pattern: include_once($FUNC(...));
          - pattern: require $FUNC(...);
          - pattern: require($FUNC(...));
          - pattern: require_once $FUNC(...);
          - pattern: require_once($FUNC(...));
    metadata:
      category: security
      confidence: HIGH
      description: "Detects include/require statements with function calls"

  # 检测$_GET/$_POST等SuperGlobal的使用
  - id: superglobal-usage
    message: "SuperGlobal variable usage detected"
    languages: [php]
    severity: INFO
    patterns:
      - pattern-either:
          - pattern: $_GET[...]
          - pattern: $_POST[...]
          - pattern: $_REQUEST[...]
          - pattern: $_COOKIE[...]
          - pattern: $_SESSION[...]
          - pattern: $_SERVER[...]
          - pattern: $_ENV[...]
          - pattern: $_FILES[...]
    metadata:
      category: security
      confidence: HIGH
      description: "Detects usage of PHP SuperGlobal variables"

  # 检测动态函数调用（call_user_func等）
  - id: dynamic-function-call
    message: "Dynamic function call detected: call_user_func/call_user_func_array"
    languages: [php]
    severity: WARNING
    patterns:
      - pattern-either:
          - pattern: call_user_func(...)
          - pattern: call_user_func_array(...)
          - pattern: forward_static_call(...)
          - pattern: forward_static_call_array(...)
    metadata:
      category: security
      confidence: HIGH
      description: "Detects dynamic function calls using call_user_func family that could be security risks"

  # 检测变量函数调用 $var() 和 $$var()
  # 匹配模式：
  #   - $var() - 变量函数调用
  #   - $$var() - 可变变量函数调用
  # 这些模式本身已经确保函数名是变量表达式，而不是字符串字面量或标识符
  # 在PHP中：$VAR(...) 只能匹配 $var()，不能匹配 "func"() 或 strlen()
  - id: variable-function-call
    message: "Variable function call detected: $FUNC(...)"
    languages: [php]
    severity: WARNING
    patterns:
      - pattern-either:
          # 匹配 $var() 形式的变量函数调用
          - pattern: $VAR(...)
          # 匹配 $$var() 形式的可变变量函数调用
          - pattern: $$VAR(...)
    metadata:
      category: security
      confidence: MEDIUM
      description: "Detects variable function calls like $var() or $$var() where function name is dynamically determined"
